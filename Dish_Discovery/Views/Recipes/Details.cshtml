@model RecipeViewModel

@{
    ViewData["Title"] = "Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Details</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Madimi+One&display=swap" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet" /> <!-- Link to an external CSS file if needed -->
    <style>
        body {
            font-family: 'Madimi One', sans-serif; /* Apply the Madimi One font to the entire page */
            background-image: url('https://media.istockphoto.com/id/469839680/vector/vintage-kitchen-tools-pattern.jpg?s=612x612&w=0&k=20&c=fBsq3rbVLT89w6Vr8AI79D9n_hBOFjb-DjLscuSZAlU='); /* Replace 'your-image-url.jpg' with the URL of your background image */
            background-size: auto; /* Adjusts the background image size to cover the entire body */
            background-repeat: repeat; /* Prevents the background image from repeating */
            background-attachment: fixed; /* Ensures background stays fixed while scrolling */
        }
    </style>
</head>
<body>
    <h1>Details <span style="color: orange;">📄</span></h1>

    <div>
        <h4>Recipe</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ingredients)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Ingredients)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Instruction)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Instruction)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Time)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Time)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Servings)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Servings)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Calories)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Calories)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Author.Nickname)
            </dt>
            <dd class="col-sm-10">
                <a asp-controller="Author" asp-action="Details" asp-route-id="@Model.Author.Id">@Model.Author.Nickname</a>
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Types)
            </dt>
            <dd class="col-sm-10">
                @foreach (var genre in Model.Types)
                {
                    <a asp-controller="Types" asp-action="Details" asp-route-id="@genre.Id">@genre.Name</a>
                }
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
</body>
</html>
